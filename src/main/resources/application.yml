spring:
  config:
    import: optional:file:.env[.properties]
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    hikari:
      driver-class-name: org.h2.Driver
  #      schema: ${DB_SCHEMA}
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    properties:
      hibernate:
        jdbc:
          batch_size: 50
  flyway:
    validate-on-migrate: true
  #    schemas: ${spring.datasource.hikari.schema}
  kafka:
    bootstrap-servers: localhost:9092
    topic-name: order-topic
    consumer:
      group-id: order-group
      client-id: order-client
      auto-offset-reset: latest
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      spring.json.value.default.type: ru.sbrf.stock.exchange.domain.OrderKafkaMessage
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
logging:
  level:
    root: ERROR
    ru.sbrf.stock.exchange: DEBUG
app:
  order-scheduler:
    cron: 0 0/1 * * * ?
    name: TaskScheduler_orderScheduler